#!/usr/bin/env perl
use strict;
use warnings;

die q{
Usage: p [-lneE etc] 'code'
    The code can make use of:
    r   to File::Slurp::read_file
    w   to File::Slurp::write_file
    S   to say()
    p   to print()
    dd  to Data::Dump::dd()
    jd  to JSON::XS::encode (utf8/pretty)
    jl  to JSON::XS::decode (utf8/allow nonref) a thing
    xd  to XML::Hash::LX::hash2xml
    xl  to XML::Hash::LX::xml2hash
    yd  to YAML::Dump()
    yl  to YAML::Load()
    sum,first,min,max,zip,uniq,any,all,none ... all of List::AllUtils
} unless @ARGV;
unshift @ARGV, '-E' if @ARGV == 1;

exec
    'perl',
    '-Mwarnings',
    '-MClass::Autouse=:superloader',
    '-MData::Dump',
    '-MFile::Slurp',
    '-MJSON::XS',
    '-MList::AllUtils=:all',
    '-Mutf8::all',
    '-MXML::Hash::LX',
    '-MYAML::XS',
    '-E',
    q[BEGIN {
        sub r  { scalar read_file shift }
        sub w  { write_file @_          }
        sub S  { say @_ ? @_ : $_       }
        sub p  { print @_ ? @_ : $_     }
        sub yd { print Dump(shift)      }
        sub yl { Load(shift)            }
        sub xd { hash2xml(shift)        }
        sub xl { xml2hash(shift)        }
        sub jd { print JSON::XS->new->utf8->pretty->encode(shift) }
        sub jl { JSON::XS->new->utf8->allow_nonref->decode(shift) }
    }], @ARGV;


# PODNAME: p
# ABSTRACT: Steroids for your perl one-liners.

=head1 SYNOPSIS

    Usage: p [-lneE etc] 'code'
        The code can make use of:
        r   to File::Slurp::read_file
        w   to File::Slurp::write_file
        S   to say()
        p   to print()
        dd  to Data::Dump::dd()
        jd  to JSON::XS::encode (utf8/pretty)
        jl  to JSON::XS::decode (utf8/allow nonref) a thing
        xd  to XML::Hash::LX::hash2xml()
        xl  to XML::Hash::LX::xml2hash()
        yd  to YAML::Dump()
        yl  to YAML::Load()
        sum,first,min,max,zip,uniq,any,all,none ... all of List::AllUtils

    Examples:

    p 'dd [File::Spec->path]'   # dynamically load arbitrary modules
    p -pe 's/foo/bar/' foo.txt  # use your favorite options like -lane
    p 'say "hello world!"'      # -E is assumed if no options are provided
    p 'dd yl r "config.yml"'    # chain commands
    p 'S sum 1,2,3,4'           # all of List::AllUtils is at your fingertips
    p 'dd ExtUtils::Installed->new->modules' # list all installed modules
    p '  dd xl r "/etc/xml/xml-core.xml"'# print dump of hash converted xml
    p 'p xd xl r "/etc/xml/xml-core.xml"'# print xml converted from hash

=cut
